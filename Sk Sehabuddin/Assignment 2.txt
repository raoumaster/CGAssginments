#include <stdio.h>
#include<unistd.h>
#include <pthread.h>

int n[10] = { 3, 12, 7, 43, 24, 2, 53, 76, 46, 17 };
char c[10] = { 'r', 'g', 's', 'a', 'c', 'b', 'n', 'm', 'z', 'q' };

void swap(int *xp, int *yp)
{
        int temp = *xp;
        *xp = *yp;
        *yp = temp;
}

void *selection() {
        int i, j, min_idx, n=10, k;
        for (i = 0; i < n-1; i++) {
                min_idx = i;
                for (j = i+1; j < n; j++) {
                        if (n[j] < n[min_idx])
                                min_idx = j;
                        if(min_idx != i)
                                swap(&n[min_idx], &n[i]);
                }
        }
        printf("\nAfter sorting::");
        for(k = 0; k < 10; k++) {
                printf("%d ",n[k]);
        printf("\n");
        }
}

void *bubble() {

}

int main() {
        pthread_t tid1;
        pthread_t tid2;
        int c;
        printf("\t1. Selection Sort.\n");
        printf("\t2. Bubble Sort.\n");
        printf("\t3. Exit.\n");

        while(1) {
                printf("\nEnter your choice::");
                scanf("%d",&c);
                switch(c) {
                        case 1: pthread_create(&tid1, NULL, selection, NULL);
                                pthread_join(tid1, NULL);
                                pthread_cancel(tid1);
                                break;
                        case 2: pthread_create(&tid2, NULL, bubble, NULL);
                                pthread_join(tid2, NULL);
                                pthread_cancel(tid2);
                                break;
                        case 3: return 0;
                        default: printf("Invalid choice.");
                }
        }
        return 0;
}