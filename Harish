#include<stdio.h>
#include<string.h>
#include<pthread.h>
void *integer_sort()
{
        int n=5,temp,a[n];
        printf("enter elements into the array\n");
        for(int i=0 ; i<n ; i++){
                scanf("%d",&a[i]);
        }
        for(int i=0 ; i<n ; i++)
        {
                for(int j=0 ; j<n-i ; j++){
                        if(a[j] > a[j+1]){
                                temp=a[j];
                                a[j]=a[j+1];
                                a[j+1]=temp;
                        }
                }
        }printf("sorted array is : ");
        for(int i=0 ; i<n ; i++){
                printf("%d  ",a[i]);
        }printf("\n");
}

void *string_sort()
{
        char str[5][10],t[10];
        int i,j,r;
        printf("enter 5 strings\n");
        for(i=0 ; i<5 ; i++){
                gets(str[i]);
        }
        for(j=1 ; j<5 ; j++){
                for(i=0 ; i<5-j ; i++){
                        r=(strcmp(str[i],str[i+1]));
                        if(r>0){
                                strcpy(t,str[i]);
                                strcpy(str[i],str[i+1]);
                     }
                }
        }
        printf("sorted array is\n");
        for(i=0 ; i<5 ; i++){
                printf("%s\n",str[i]);
        }
}

int main(){
        pthread_t t1;
        pthread_t t2;

        int ch,err_no[4];

        printf("1.integer sort\n");
        printf("2.String sort\n");
        printf("3.exit\n");

        while(1){
                printf("enter your choice\n");
                scanf("%d\n",ch);
                switch(ch)
                {
                        case 1:err_no[1]=pthread_create(&t1,NULL,integer_sort,NULL);
                               pthread_join(t1,NULL);
                               break;
                        case 2:err_no[2]=pthread_create(&t2,NULL,string_sort,NULL);
                               pthread_join(t2,NULL);
                               break;
                        case 3:{
                                       if(err_no[1]==0)
                                               pthread_cancel(t1);
                                       if(err_no[2]==1)
                                               pthread_cancel(t2);
                                       return 0;
                               }
                        default:printf("enter a valid choice\n");
                               break;
                }
        }
        return 0;
}
