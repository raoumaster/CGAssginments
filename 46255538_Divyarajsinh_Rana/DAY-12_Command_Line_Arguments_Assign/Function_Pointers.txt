/* C program -> Function pointers to read 3 user choices 
 * and returning the output based on user's entered choice based on 
 * 3 different functions.
 */
 
#include<stdio.h>
#include<string.h>
#define MAX_STR 50

// C function to find out min and max number 

void min_num(int x, int y)
{
	printf("Min number: %d\n", x < y ? x : y);
}
void max_num(int x, int y)
{
	printf("Max number: %d\n", x > y ? x : by;
}

// C function to compare 2 strings and returning the longest string 

void getLongestSring(char *s1, char *s2)
{
	printf("Longest string is: %s\n", strlen(s1) > strlen(s2) ? s1 : s2);
}

// c function to find the address of corresponding min and max number

void getFunc(void (*fp)(int, int), int ch)
{
	if(ch == 1)
	{
		printf("Address of min_num(): %p\n", &fp);
	}
	else
	{
		printf("Address of max_num(): %p\n", &fp);
	}
}

// C function for process_numbers

void process_numbers(void (*fp)(int, int), int choice)
{
	getFunc(fp, ch);
	int n1;
	int n2;
	printf("First number: ");
	scanf("%d", &n1);
	printf("Second number: ");
	scanf("%d", &n2);
	fp(n1, n2);

}

// menu driven function to find either min number or max number or longest string 

void readChoice(void (*fp)(int, int), void (*fptr)(char*, char*))
{
	int ch;
	printf("1) Min number\n2) Max number\n3) Longest string\n");
	printf("Input your choice: ");
	scanf("%d", &ch);
	printf("\n");

	switch(ch)
	{
		case 1:
			{
				fp = min;
				process_numbers(fp, ch);
			}
			break;
		case 2:
			{
				fp = max;
				process_numbers(fp, ch);
			}
			break;
		case 3:
			{
				char s1[MAX_STR];
				char s2[MAX_STR];

				printf("Input first string from user: ");
				fgets(s1, MAX_STR, stdin);
				s1[strcspn(s1, "\n")] = 0;

				printf("Enter second string from user: ");
				fgets(s2, MAX_STR, stdin);
				s2[strcspn(s2, "\n")] = 0;

				fptr = getLongestString;
				fptr(s1, s2);
			}
			break;
		default:
			printf("Enter valid choice\n");
			break;
	}
}

// main function

int main()
{
	void (*fp)(int, int);

	void (*fptr)(char*, char*);

	readChoice(fp, fptr);   // Calling the function
	return 0;
}
