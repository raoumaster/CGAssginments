#include <stdio.h>
#include<unistd.h>
#include <pthread.h>
#include<string.h>

int n[10] = { 1, 23, 45, 62, 21, 52, 47, 97, 35, 11 };
const char* arr[] = { "Rahila", "leena", "Ayesha", "Junaid", "Afrah", "Maahib", "AAhil", "Aalia", "Ahmed", "Hussain" };
void swap(int *xp, int *yp)
{
        int temp = *xp;
        *xp = *yp;
        *yp = temp;
}
static int myCompare(const void* a, const void* b)
{
        return strcmp((const char* )a, (const char *)b);
}
void sort(const char* arr[], int n)
{
        qsort(arr, n,  sizeof(const char*), myCompare);
}

void *selection() {
        int i, j, min_idx, f=10, k;
        for (i = 0; i < f-1; i++) {
                min_idx = i;
                for (j = i+1; j < f; j++) {
                        if (n[j] < n[min_idx])
                                min_idx = j;
                        if(min_idx != i)
                                swap(&n[min_idx], &n[i]);                                                                                                                                                                                                 }
        }
        printf("\nAfter Sorting:\n");
        for(k = 0; k < 10; k++)
                printf("%d ",n[k]);
        printf("\n");

        int n = sizeof(arr)/sizeof(arr[0]);
        int l;
        sort(arr,n);
        printf("\nAfter Sorting:\n");
        for(l=0;l<n;l++)
                printf("%d: %s \n", l, arr[l]);



}
void *bubble() {
        int i, j, f=10, k;
        for (i = 0; i < f - 1; i++) {
                for (j = 0; j < f - i - 1; j++) {
                        if (n[j] > n[j + 1])
                                swap(&n[j], &n[j + 1]);
                }
        }
        printf("\nAfter sorting:\n");
        for(k = 0; k < 10; k++)
                printf("%d ",n[k]);
        printf("\n");

        int n = sizeof(arr)/sizeof(arr[0]);
        int l;
        sort(arr,n);
        printf("\nAfter Sorting:\n");
        for(l=0;l<n;l++)
                printf("%d: %s \n",l,arr[l]);

}
int main() {
        pthread_t tid[2];
        int err_no[2]
        int c;
        printf("\t1. Selection Sort. \n");
        printf("\t2. Bubble Sort. \n");
        printf("\t3. Exit. \n");
        while(1) {
                printf("\nEnter your choice: ");
                scanf("%d",&c);
                switch(c) {
                        case 1: err_no[0]= pthread_create(&tid1, NULL, selection, NULL);
                                pthread_join(tid1, NULL);
                                break;
                        case 2: err_no[1]=pthread_create(&tid2, NULL, bubble, NULL);
                                pthread_join(tid2, NULL);
                                break;
                        case 3:for(int i=0;i<2;i++)
                                   if(err_no[i]==0)
                                      pthread_cancel(tid[i]); 
                               return 0;
                        default: printf("Invalid choice.");
                }
        }
        return 0;
}