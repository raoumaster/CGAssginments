#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <pthread.h>
#include <stdio.h>


int counter = 0;
pthread_mutex_t mutex;


void *isPalindrome (void *args){

        char *pargs = (char *)args;
        int length = strlen(pargs);
        int flag = 0;

        for(int i = 0 ; i < length; i++){
                if(pargs[i] != pargs[length - i - 1]){
                        flag = 1;
                        break;
                }
        }
        if(flag) {
                printf("%s Is not a palindrome...\n", pargs);
        }
        else {
                printf("%s Is a palindrome.\n", pargs);
                pthread_mutex_lock(&mutex);
                counter++;
                pthread_mutex_unlock(&mutex);
        }
}

int main(int argc , char *argv[]){

        if(argc < 2) {
                printf("Invalid number of argument count...\n");
        }
        else {
                int totalArgs = argc - 1;
                pthread_t thrd[totalArgs];

                for(int i = 0 ; i < totalArgs ; i++){
                        pthread_create(&thrd[i] , NULL , isPalindrome , argv[i + 1]);
                        pthread_join(thrd[i], NULL);
                }
                printf("Arguments passed are %d & palindromes are %d \n", totalArgs , counter);
        }
        printf("Exiting Program...!\n");
}